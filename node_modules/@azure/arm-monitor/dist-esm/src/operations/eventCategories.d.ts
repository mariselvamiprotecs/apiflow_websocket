import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { EventCategories } from "../operationsInterfaces";
import { MonitorClient } from "../monitorClient";
import { LocalizableString, EventCategoriesListOptionalParams } from "../models";
/** Class containing EventCategories operations. */
export declare class EventCategoriesImpl implements EventCategories {
    private readonly client;
    /**
     * Initialize a new instance of the class EventCategories class.
     * @param client Reference to the service client
     */
    constructor(client: MonitorClient);
    /**
     * Get the list of available event categories supported in the Activity Logs Service.<br>The current
     * list includes the following: Administrative, Security, ServiceHealth, Alert, Recommendation, Policy.
     * @param options The options parameters.
     */
    list(options?: EventCategoriesListOptionalParams): PagedAsyncIterableIterator<LocalizableString>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get the list of available event categories supported in the Activity Logs Service.<br>The current
     * list includes the following: Administrative, Security, ServiceHealth, Alert, Recommendation, Policy.
     * @param options The options parameters.
     */
    private _list;
}
//# sourceMappingURL=eventCategories.d.ts.map