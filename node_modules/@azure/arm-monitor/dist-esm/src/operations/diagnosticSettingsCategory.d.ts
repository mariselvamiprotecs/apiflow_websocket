import { DiagnosticSettingsCategory } from "../operationsInterfaces";
import { MonitorClient } from "../monitorClient";
import { DiagnosticSettingsCategoryGetOptionalParams, DiagnosticSettingsCategoryGetResponse, DiagnosticSettingsCategoryListOptionalParams, DiagnosticSettingsCategoryListResponse } from "../models";
/** Class containing DiagnosticSettingsCategory operations. */
export declare class DiagnosticSettingsCategoryImpl implements DiagnosticSettingsCategory {
    private readonly client;
    /**
     * Initialize a new instance of the class DiagnosticSettingsCategory class.
     * @param client Reference to the service client
     */
    constructor(client: MonitorClient);
    /**
     * Gets the diagnostic settings category for the specified resource.
     * @param resourceUri The identifier of the resource.
     * @param name The name of the diagnostic setting.
     * @param options The options parameters.
     */
    get(resourceUri: string, name: string, options?: DiagnosticSettingsCategoryGetOptionalParams): Promise<DiagnosticSettingsCategoryGetResponse>;
    /**
     * Lists the diagnostic settings categories for the specified resource.
     * @param resourceUri The identifier of the resource.
     * @param options The options parameters.
     */
    list(resourceUri: string, options?: DiagnosticSettingsCategoryListOptionalParams): Promise<DiagnosticSettingsCategoryListResponse>;
}
//# sourceMappingURL=diagnosticSettingsCategory.d.ts.map