import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AlertRuleIncidents } from "../operationsInterfaces";
import { MonitorClient } from "../monitorClient";
import { Incident, AlertRuleIncidentsListByAlertRuleOptionalParams, AlertRuleIncidentsGetOptionalParams, AlertRuleIncidentsGetResponse } from "../models";
/** Class containing AlertRuleIncidents operations. */
export declare class AlertRuleIncidentsImpl implements AlertRuleIncidents {
    private readonly client;
    /**
     * Initialize a new instance of the class AlertRuleIncidents class.
     * @param client Reference to the service client
     */
    constructor(client: MonitorClient);
    /**
     * Gets a list of incidents associated to an alert rule
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ruleName The name of the rule.
     * @param options The options parameters.
     */
    listByAlertRule(resourceGroupName: string, ruleName: string, options?: AlertRuleIncidentsListByAlertRuleOptionalParams): PagedAsyncIterableIterator<Incident>;
    private listByAlertRulePagingPage;
    private listByAlertRulePagingAll;
    /**
     * Gets an incident associated to an alert rule
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ruleName The name of the rule.
     * @param incidentName The name of the incident to retrieve.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ruleName: string, incidentName: string, options?: AlertRuleIncidentsGetOptionalParams): Promise<AlertRuleIncidentsGetResponse>;
    /**
     * Gets a list of incidents associated to an alert rule
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ruleName The name of the rule.
     * @param options The options parameters.
     */
    private _listByAlertRule;
}
//# sourceMappingURL=alertRuleIncidents.d.ts.map