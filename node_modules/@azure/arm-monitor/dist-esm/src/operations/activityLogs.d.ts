import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ActivityLogs } from "../operationsInterfaces";
import { MonitorClient } from "../monitorClient";
import { EventData, ActivityLogsListOptionalParams } from "../models";
/** Class containing ActivityLogs operations. */
export declare class ActivityLogsImpl implements ActivityLogs {
    private readonly client;
    /**
     * Initialize a new instance of the class ActivityLogs class.
     * @param client Reference to the service client
     */
    constructor(client: MonitorClient);
    /**
     * Provides the list of records from the activity logs.
     * @param filter Reduces the set of data collected.<br>This argument is required and it also requires
     *               at least the start date/time.<br>The **$filter** argument is very restricted and allows only the
     *               following patterns.<br>- *List events for a resource group*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and
     *               resourceGroupName eq 'resourceGroupName'.<br>- *List events for resource*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceUri
     *               eq 'resourceURI'.<br>- *List events for a subscription in a time range*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z'.<br>- *List
     *               events for a resource provider*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and
     *               eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceProvider eq
     *               'resourceProviderName'.<br>- *List events for a correlation Id*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and
     *               correlationId eq 'correlationID'.<br><br>**NOTE**: No other syntax is allowed.
     * @param options The options parameters.
     */
    list(filter: string, options?: ActivityLogsListOptionalParams): PagedAsyncIterableIterator<EventData>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Provides the list of records from the activity logs.
     * @param filter Reduces the set of data collected.<br>This argument is required and it also requires
     *               at least the start date/time.<br>The **$filter** argument is very restricted and allows only the
     *               following patterns.<br>- *List events for a resource group*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and
     *               resourceGroupName eq 'resourceGroupName'.<br>- *List events for resource*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceUri
     *               eq 'resourceURI'.<br>- *List events for a subscription in a time range*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z'.<br>- *List
     *               events for a resource provider*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and
     *               eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceProvider eq
     *               'resourceProviderName'.<br>- *List events for a correlation Id*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and
     *               correlationId eq 'correlationID'.<br><br>**NOTE**: No other syntax is allowed.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param filter Reduces the set of data collected.<br>This argument is required and it also requires
     *               at least the start date/time.<br>The **$filter** argument is very restricted and allows only the
     *               following patterns.<br>- *List events for a resource group*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and
     *               resourceGroupName eq 'resourceGroupName'.<br>- *List events for resource*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceUri
     *               eq 'resourceURI'.<br>- *List events for a subscription in a time range*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z'.<br>- *List
     *               events for a resource provider*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and
     *               eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceProvider eq
     *               'resourceProviderName'.<br>- *List events for a correlation Id*: $filter=eventTimestamp ge
     *               '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and
     *               correlationId eq 'correlationID'.<br><br>**NOTE**: No other syntax is allowed.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=activityLogs.d.ts.map