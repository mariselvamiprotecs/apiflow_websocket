import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { AutoscaleSettings, Operations, AlertRuleIncidents, AlertRules, LogProfiles, DiagnosticSettings, DiagnosticSettingsCategory, ActionGroups, ActivityLogs, EventCategories, TenantActivityLogs, MetricDefinitions, Metrics, Baselines, MetricAlerts, MetricAlertsStatus, ScheduledQueryRules, MetricNamespaces, VMInsights, PrivateLinkScopes, PrivateLinkScopeOperationStatus, PrivateLinkResources, PrivateEndpointConnections, PrivateLinkScopedResources, ActivityLogAlerts, DataCollectionEndpoints, DataCollectionRuleAssociations, DataCollectionRules } from "./operationsInterfaces";
import { MonitorClientOptionalParams } from "./models";
export declare class MonitorClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the MonitorClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: MonitorClientOptionalParams);
    autoscaleSettings: AutoscaleSettings;
    operations: Operations;
    alertRuleIncidents: AlertRuleIncidents;
    alertRules: AlertRules;
    logProfiles: LogProfiles;
    diagnosticSettings: DiagnosticSettings;
    diagnosticSettingsCategory: DiagnosticSettingsCategory;
    actionGroups: ActionGroups;
    activityLogs: ActivityLogs;
    eventCategories: EventCategories;
    tenantActivityLogs: TenantActivityLogs;
    metricDefinitions: MetricDefinitions;
    metrics: Metrics;
    baselines: Baselines;
    metricAlerts: MetricAlerts;
    metricAlertsStatus: MetricAlertsStatus;
    scheduledQueryRules: ScheduledQueryRules;
    metricNamespaces: MetricNamespaces;
    vMInsights: VMInsights;
    privateLinkScopes: PrivateLinkScopes;
    privateLinkScopeOperationStatus: PrivateLinkScopeOperationStatus;
    privateLinkResources: PrivateLinkResources;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkScopedResources: PrivateLinkScopedResources;
    activityLogAlerts: ActivityLogAlerts;
    dataCollectionEndpoints: DataCollectionEndpoints;
    dataCollectionRuleAssociations: DataCollectionRuleAssociations;
    dataCollectionRules: DataCollectionRules;
}
//# sourceMappingURL=monitorClient.d.ts.map