/// <reference types="node" />
/// <reference types="node" />
import type { BaseClickHouseClientConfigOptions, Connection } from '@clickhouse/client-common';
import { ClickHouseClient } from '@clickhouse/client-common';
import type Stream from 'stream';
import type { NodeConnectionParams } from './connection';
export type NodeClickHouseClientConfigOptions = BaseClickHouseClientConfigOptions<Stream.Readable> & {
    tls?: BasicTLSOptions | MutualTLSOptions;
    /** HTTP Keep-Alive related settings */
    keep_alive?: {
        /** Enable or disable HTTP Keep-Alive mechanism. Default: true */
        enabled?: boolean;
        /** For how long keep a particular idle socket alive on the client side (in milliseconds).
         * It is supposed to be a fair bit less that the ClickHouse server KeepAlive timeout, which is by default 3000 ms.
         * Default value: 2500 */
        idle_socket_ttl?: number;
    };
};
interface BasicTLSOptions {
    ca_cert: Buffer;
}
interface MutualTLSOptions {
    ca_cert: Buffer;
    cert: Buffer;
    key: Buffer;
}
export declare function createClient(config?: NodeClickHouseClientConfigOptions): ClickHouseClient<Stream.Readable>;
export declare function createConnection(params: NodeConnectionParams): Connection<Stream.Readable>;
export {};
